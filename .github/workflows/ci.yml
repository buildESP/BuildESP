name: Fullstack Frontend/Backend CI/CD

on:
  push:
    branches:
      - DevOps_ESP-51 # or your main branch
  pull_request:
    branches:
      - DevOps_ESP-51 # or your main branch

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # or your desired Node.js version

      - name: Install dependencies (frontend)
        run: |
          cd frontend/app
          npm ci
        continue-on-error: true

      - name: Install dependencies (backend)
        run: |
          cd backend/api
          npm i
        continue-on-error: true

      - name: Lint (frontend)
        run: |
          cd frontend/app
          npm run lint # or your lint command
        continue-on-error: true

      - name: Lint (backend)
        run: |
          cd backend/api
          npm run lint # or your lint command
        continue-on-error: true

      - name: Test (frontend)
        run: |
          cd frontend/app
          npm run test:coverage # or your test command with coverage
        continue-on-error: true

      - name: Test (backend)
        run: |
          cd backend/api
          npm run test:coverage # or your test command with coverage
        continue-on-error: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >-
            -Dsonar.organization=YOUR_SONAR_ORGANIZATION
            -Dsonar.projectKey=YOUR_SONAR_PROJECT_KEY
            -Dsonar.sources=frontend/src,backend/src # Adjust source paths
            -Dsonar.tests=frontend/src,backend/test # Adjust test paths
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info,backend/coverage/lcov.info # Adjust coverage paths
        continue-on-error: true

        
# cd:
#   needs: ci
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/main' # Only deploy on push to main branch
#   environment:
#     name: production
#     url: ${{ steps.deploy.outputs.url }}

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20'

#     - name: Install dependencies (frontend)
#       run: |
#         cd frontend
#         npm ci

#     - name: Install dependencies (backend)
#       run: |
#         cd backend
#         npm ci

#     - name: Build (frontend)
#       run: |
#         cd frontend
#         npm run build

#     - name: Deploy to your hosting provider
#       id: deploy
#       # Example using Heroku. Adapt to your hosting provider
#       uses: akhileshns/heroku-deploy@v3.12.12
#       with:
#         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#         heroku_app_name: "YOUR_HEROKU_APP_NAME" # Replace with your Heroku app name
#         heroku_email: "YOUR_HEROKU_EMAIL" # Replace with your Heroku email
#         appdir: "backend" #Deploy the backend folder.