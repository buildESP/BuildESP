name: Fullstack-CI-Pipeline

on:
  push:
    branches:
      - DevOps_ESP-51
  pull_request:
    branches:
      - DevOps_ESP-51

env:
  NODE_VERSION: '20.x'
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

jobs:
  init:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            frontend/app/node_modules
            backend/api/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

  quality:
    runs-on: ubuntu-22.04
    steps:
      - name: Lint and Format Check
        run: |
          cd frontend/app
          npx eslint . --max-warnings=0
          npx prettier --check .
          cd ../../backend/api
          npx eslint . --max-warnings=0
          npx prettier --check .

      - name: Run Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: ${{ env.CODACY_PROJECT_TOKEN }}
          directory: .

  security:
    runs-on: ubuntu-22.04
    steps:
      - name: Run Snyk Monitor
        uses: snyk/actions/node@master
        with:
          command: monitor
          args: --all-projects --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Run Unit Tests
        run: |
          cd backend/api
          npm test -- --coverage
          cd ../../frontend/app
          npm test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}