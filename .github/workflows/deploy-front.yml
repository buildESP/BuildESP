name: Deploy Frontend

on:
  push:
    branches:
      - DevOps_ESP-174
    paths:
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_FRONT_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Frontend to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.MY_FRONT_SERVER }}@${{ secrets.EC2_FRONT_HOST }} << 'EOF'
            echo "🚀 Déploiement du Frontend & Monitoring..."

            # Assurez-vous que nous sommes dans le bon répertoire
            cd /var/www/front/frontend || { echo "Répertoire /var/www/front/frontend non trouvé"; exit 1; }

            echo "📥 Sauvegarde temporaire du .env..."
            git stash push -m "Sauvegarde temporaire du .env" .env || echo "Aucun fichier .env à stasher"

            # Stasher toutes les autres modifications locales
            git stash push -m "Sauvegarde des modifications locales" --keep-index || echo "Aucune modification locale à stasher"

            echo "📥 Pulling latest changes..."
            git checkout DevOps_ESP-174 || git checkout -b DevOps_ESP-174
            git pull origin DevOps_ESP-174 --rebase

            echo "📥 Restauration du .env..."
            git stash pop || echo "⚠️ Aucun stash à restaurer"

            echo "🧹 Nettoyage des fichiers inutiles..."
            rm -rf /var/www/front/backend /var/www/front/cypress

            # Se rendre dans le répertoire où se trouve le fichier package.json
            cd /var/www/front/frontend/app || { echo "Répertoire /var/www/front/frontend/app non trouvé"; exit 1; }

            # Vérifier si package.json existe avant de lancer le build
            if [ -f package.json ]; then
              echo "⚙️ Building frontend..."
              npm run build
            else
              echo "❌ ERREUR: package.json non trouvé dans /var/www/front/frontend/app."
              exit 1
            fi

            echo "🔄 Mise à jour et redémarrage des conteneurs Docker..."
            docker-compose down
            sudo docker system prune -af
            docker network create buildesp_network || echo "Réseau déjà existant"
            docker-compose build
            docker-compose up -d

            echo "✅ Déploiement Frontend & Monitoring terminé !"
          EOF
